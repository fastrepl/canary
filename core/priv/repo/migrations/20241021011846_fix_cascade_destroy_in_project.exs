defmodule Canary.Repo.Migrations.FixCascadeDestroyInProject do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    drop constraint(:sources, "sources_project_id_fkey")

    alter table(:sources) do
      modify :project_id,
             references(:projects,
               column: :id,
               name: "sources_project_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    drop constraint(:insights_configs, "insights_configs_project_id_fkey")

    alter table(:insights_configs) do
      modify :project_id,
             references(:projects,
               column: :id,
               name: "insights_configs_project_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    execute(
      "ALTER TABLE insights_configs alter CONSTRAINT insights_configs_project_id_fkey DEFERRABLE INITIALLY DEFERRED"
    )

    execute(
      "ALTER TABLE sources alter CONSTRAINT sources_project_id_fkey DEFERRABLE INITIALLY DEFERRED"
    )
  end

  def down do
    drop constraint(:insights_configs, "insights_configs_project_id_fkey")

    alter table(:insights_configs) do
      modify :project_id,
             references(:projects,
               column: :id,
               name: "insights_configs_project_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    drop constraint(:sources, "sources_project_id_fkey")

    alter table(:sources) do
      modify :project_id,
             references(:projects,
               column: :id,
               name: "sources_project_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    execute("ALTER TABLE sources alter CONSTRAINT sources_project_id_fkey NOT DEFERRABLE")

    execute(
      "ALTER TABLE insights_configs alter CONSTRAINT insights_configs_project_id_fkey NOT DEFERRABLE"
    )
  end
end
